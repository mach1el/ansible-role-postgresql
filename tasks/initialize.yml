---
- name: PGSQL | Set environment variables | debian.
  become: true
  template:
    src: postgres.sh.j2
    dest: /etc/profile.d/postgres.sh
    mode: 0644
  when: ansible_os_family == 'Debian'
  notify: debian | Restart PGSQL

- name: PGSQL | Set environment variables | centos.
  become: true
  template:
    src: rhel_postgres.sh.j2
    dest: /etc/profile.d/postgres.sh
    mode: 0644
  notify: centos | Restart PGSQL
  when: ansible_distribution == 'CentOS'

- name: PGSQL | Check if database is initialized | debian.
  become: true
  stat:
    path: "{{ postgresql_data_dir }}/PG_VERSION"
  register: pgdata_debian_dir_version
  when: ansible_os_family == 'Debian'

- name: PGSQL | Check if database is initialized | centos.
  become: true
  stat:
    path: "{{ postgresql_rhel_data }}/PG_VERSION"
  register: pgdata_rhel_dir_version
  when: ansible_distribution == 'CentOS'

- name: PGSQL | Ensure database is initialized | debian.
  become: true
  become_user: "{{ postgresql_user }}"
  command: "{{ postgresql_bin_dir }}/initdb -D {{ postgresql_data_dir }}"
  when: ansible_os_family == 'Debian' and pgdata_debian_dir_version.stat.exists == 'False'
  vars:
    ansible_ssh_pipelining: true

- name: PGSQL | Ensure database is initialized | rhel.
  become: true
  command: "{{ postgresql_rhel_bin }} initdb"
  when: ansible_distribution == 'CentOS' and pgdata_rhel_dir_version.stat.exists == 'False'
  vars:
    ansible_ssh_pipelining: true